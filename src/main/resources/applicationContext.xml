<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <context:property-placeholder location="classpath:mysql.properties"/>

    <context:component-scan base-package="com.newsocial.rest" />

    <!-- Register Mongo Instance -->
    <mongo:mongo host="localhost" port="27017" id="mongo" />
    <mongo:db-factory dbname="socialbreaknews" mongo-ref="mongo" id="mongoDbFactory" />

    <!--  for defining mongo template -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

    <bean id="userDAO" class="com.newsocial.dao.UserDAOImpl">
        <constructor-arg name="mongoOps" ref="mongoTemplate"/>
    </bean>

    <bean id="userTransaction" class="com.newsocial.transaction.impl.UserTransactionImpl" >
        <property name="userDAO" ref="userDAO"/>
    </bean>

</beans>